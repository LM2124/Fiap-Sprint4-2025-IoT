o# üß† Reconhecimento Facial com Flask e Dlib

Este projeto √© uma aplica√ß√£o em **Python** que utiliza **Flask**, **OpenCV**, **Dlib** e **Pillow** para realizar **reconhecimento facial**.  
O sistema permite **registrar** e **validar** usu√°rios com base em suas imagens faciais, associando cada rosto a um **perfil de investidor** (Conservador, Moderado ou Agressivo).

---

## üöÄ Funcionalidades

- Registro facial com nome e tipo de investidor  
- Valida√ß√£o facial para reconhecer usu√°rios j√° cadastrados  
- Banco de dados local utilizando arquivo `db.pkl`  
- Processamento e reconhecimento facial com **Dlib**  
- API REST simples com **Flask**

---

## üìÅ Estrutura do Projeto

```
Sprint4.py  
db.pkl  
shape_predictor_5_face_landmarks.dat  
dlib_face_recognition_resnet_model_v1.dat
```

---

## ‚ñ∂Ô∏è Como Executar o Projeto

1. **Clone o reposit√≥rio**

2. **Instale as depend√™ncias**

3. **Execute o servidor Flask**

4. O servidor ser√° iniciado em:
   ```
   http://127.0.0.1:5000
   ```
---

###Recomendo o uso do script mencionado no v√≠deo.

#### Exemplo de Registro
```bash
curl -X POST http://127.0.0.1:5000/upload \
  -F "image=@foto_lorenzo.jpg" \
  -F "action=register" \
  -F "nome=nome" \
  -F "tipo=Agressivo"
```

#### Exemplo de Valida√ß√£o
```bash
curl -X POST http://127.0.0.1:5000/upload \
  -F "image=@foto_nome.jpg" \
  -F "action=validate"
```

---

## üí¨ Poss√≠veis Respostas

- `Usu√°rio cadastrado com sucesso: Nome (Agressivo)`
- `Bem vindo, Nome! (Bem-vindo, investidor agressivo! Prepare-se para explorar oportunidades de alto risco com grandes potenciais de retorno!)`
- `Usu√°rio n√£o reconhecido.`
- `Nenhum rosto detectado.`
- `A√ß√£o inv√°lida.`
- `Codigo 200, 400 e etc.`

